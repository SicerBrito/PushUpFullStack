// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia.Data;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(DbAppContext))]
    [Migration("20231111051325_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.CarritoCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCarritoCompra")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadCadaProductoEnCarrito")
                        .HasColumnType("int")
                        .HasColumnName("CantidadCadaProductoEnCarrito");

                    b.Property<int>("IdClienteFk")
                        .HasColumnType("int")
                        .HasColumnName("IdClienteFk");

                    b.Property<int>("IdProductoFk")
                        .HasColumnType("int")
                        .HasColumnName("IdProductoFk");

                    b.Property<double>("PrecioTotalCarrito")
                        .HasColumnType("double")
                        .HasColumnName("PrecioTotalCarrito");

                    b.Property<string>("ProductoEnCarrito")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("ProductoEnCarrito");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteFk");

                    b.HasIndex("IdProductoFk");

                    b.ToTable("CarritoCompra", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CantidadCadaProductoEnCarrito = 2,
                            IdClienteFk = 1,
                            IdProductoFk = 1,
                            PrecioTotalCarrito = 20.5,
                            ProductoEnCarrito = "Producto 1"
                        },
                        new
                        {
                            Id = 2,
                            CantidadCadaProductoEnCarrito = 1,
                            IdClienteFk = 1,
                            IdProductoFk = 3,
                            PrecioTotalCarrito = 15.75,
                            ProductoEnCarrito = "Producto 2"
                        },
                        new
                        {
                            Id = 3,
                            CantidadCadaProductoEnCarrito = 3,
                            IdClienteFk = 2,
                            IdProductoFk = 2,
                            PrecioTotalCarrito = 30.0,
                            ProductoEnCarrito = "Producto 3"
                        },
                        new
                        {
                            Id = 4,
                            CantidadCadaProductoEnCarrito = 1,
                            IdClienteFk = 3,
                            IdProductoFk = 1,
                            PrecioTotalCarrito = 10.0,
                            ProductoEnCarrito = "Producto 4"
                        },
                        new
                        {
                            Id = 5,
                            CantidadCadaProductoEnCarrito = 2,
                            IdClienteFk = 2,
                            IdProductoFk = 3,
                            PrecioTotalCarrito = 25.5,
                            ProductoEnCarrito = "Producto 5"
                        },
                        new
                        {
                            Id = 6,
                            CantidadCadaProductoEnCarrito = 1,
                            IdClienteFk = 4,
                            IdProductoFk = 2,
                            PrecioTotalCarrito = 15.75,
                            ProductoEnCarrito = "Producto 6"
                        },
                        new
                        {
                            Id = 7,
                            CantidadCadaProductoEnCarrito = 3,
                            IdClienteFk = 3,
                            IdProductoFk = 1,
                            PrecioTotalCarrito = 30.0,
                            ProductoEnCarrito = "Producto 7"
                        },
                        new
                        {
                            Id = 8,
                            CantidadCadaProductoEnCarrito = 1,
                            IdClienteFk = 4,
                            IdProductoFk = 3,
                            PrecioTotalCarrito = 10.0,
                            ProductoEnCarrito = "Producto 8"
                        },
                        new
                        {
                            Id = 9,
                            CantidadCadaProductoEnCarrito = 2,
                            IdClienteFk = 5,
                            IdProductoFk = 2,
                            PrecioTotalCarrito = 25.5,
                            ProductoEnCarrito = "Producto 9"
                        },
                        new
                        {
                            Id = 10,
                            CantidadCadaProductoEnCarrito = 1,
                            IdClienteFk = 5,
                            IdProductoFk = 1,
                            PrecioTotalCarrito = 15.75,
                            ProductoEnCarrito = "Producto 10"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.CategoriaProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCategoriaProducto")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("CategoriaProducto", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Electrónicos"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Ropa"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Hogar"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Deportes"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Juguetes"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Alimentos"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Libros"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Salud y Belleza"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Automotriz"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Muebles"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCliente")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Apellidos");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("Direccion");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombres");

                    b.Property<double>("NroContacto")
                        .HasColumnType("double")
                        .HasColumnName("NroContacto");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellidos = "Pérez",
                            Direccion = "Calle A, Ciudad",
                            Nombres = "Juan",
                            NroContacto = 123456789.0
                        },
                        new
                        {
                            Id = 2,
                            Apellidos = "Gómez",
                            Direccion = "Calle B, Ciudad",
                            Nombres = "María",
                            NroContacto = 987654321.0
                        },
                        new
                        {
                            Id = 3,
                            Apellidos = "Rodríguez",
                            Direccion = "Calle C, Ciudad",
                            Nombres = "Carlos",
                            NroContacto = 555555555.0
                        },
                        new
                        {
                            Id = 4,
                            Apellidos = "Martínez",
                            Direccion = "Calle D, Ciudad",
                            Nombres = "Ana",
                            NroContacto = 111111111.0
                        },
                        new
                        {
                            Id = 5,
                            Apellidos = "López",
                            Direccion = "Calle E, Ciudad",
                            Nombres = "Pedro",
                            NroContacto = 999999999.0
                        },
                        new
                        {
                            Id = 6,
                            Apellidos = "Sánchez",
                            Direccion = "Calle F, Ciudad",
                            Nombres = "Laura",
                            NroContacto = 888888888.0
                        },
                        new
                        {
                            Id = 7,
                            Apellidos = "Hernández",
                            Direccion = "Calle G, Ciudad",
                            Nombres = "Diego",
                            NroContacto = 777777777.0
                        },
                        new
                        {
                            Id = 8,
                            Apellidos = "Gutiérrez",
                            Direccion = "Calle H, Ciudad",
                            Nombres = "Elena",
                            NroContacto = 666666666.0
                        },
                        new
                        {
                            Id = 9,
                            Apellidos = "Flores",
                            Direccion = "Calle I, Ciudad",
                            Nombres = "Hugo",
                            NroContacto = 444444444.0
                        },
                        new
                        {
                            Id = 10,
                            Apellidos = "Díaz",
                            Direccion = "Calle J, Ciudad",
                            Nombres = "Sofía",
                            NroContacto = 333333333.0
                        });
                });

            modelBuilder.Entity("Dominio.Entities.ClienteCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdClienteCompra")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DireccionCliente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("DireccionCliente");

                    b.Property<DateTime>("FechaTransaccion")
                        .HasColumnType("DateTime")
                        .HasColumnName("FechaTransaccion");

                    b.Property<int>("IdClienteFk")
                        .HasColumnType("int")
                        .HasColumnName("IdClienteFk");

                    b.Property<int>("IdCompraFk")
                        .HasColumnType("int")
                        .HasColumnName("IdCompraFk");

                    b.Property<int>("IdMetodoPagoFk")
                        .HasColumnType("int")
                        .HasColumnName("IdMetodoPagoFk");

                    b.Property<double>("ValorTotalTransaccion")
                        .HasColumnType("double")
                        .HasColumnName("ValorTotalTransaccion");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteFk");

                    b.HasIndex("IdCompraFk");

                    b.HasIndex("IdMetodoPagoFk");

                    b.ToTable("ClienteCompra", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DireccionCliente = "Calle A, Ciudad",
                            FechaTransaccion = new DateTime(2023, 11, 11, 0, 13, 24, 844, DateTimeKind.Local).AddTicks(8061),
                            IdClienteFk = 1,
                            IdCompraFk = 1,
                            IdMetodoPagoFk = 1,
                            ValorTotalTransaccion = 50.0
                        },
                        new
                        {
                            Id = 2,
                            DireccionCliente = "Calle B, Ciudad",
                            FechaTransaccion = new DateTime(2023, 11, 11, 0, 13, 24, 844, DateTimeKind.Local).AddTicks(8101),
                            IdClienteFk = 2,
                            IdCompraFk = 2,
                            IdMetodoPagoFk = 2,
                            ValorTotalTransaccion = 75.0
                        },
                        new
                        {
                            Id = 3,
                            DireccionCliente = "Calle C, Ciudad",
                            FechaTransaccion = new DateTime(2023, 11, 11, 0, 13, 24, 844, DateTimeKind.Local).AddTicks(8102),
                            IdClienteFk = 3,
                            IdCompraFk = 3,
                            IdMetodoPagoFk = 1,
                            ValorTotalTransaccion = 100.0
                        },
                        new
                        {
                            Id = 4,
                            DireccionCliente = "Calle D, Ciudad",
                            FechaTransaccion = new DateTime(2023, 11, 11, 0, 13, 24, 844, DateTimeKind.Local).AddTicks(8103),
                            IdClienteFk = 4,
                            IdCompraFk = 4,
                            IdMetodoPagoFk = 3,
                            ValorTotalTransaccion = 30.0
                        },
                        new
                        {
                            Id = 5,
                            DireccionCliente = "Calle E, Ciudad",
                            FechaTransaccion = new DateTime(2023, 11, 11, 0, 13, 24, 844, DateTimeKind.Local).AddTicks(8104),
                            IdClienteFk = 5,
                            IdCompraFk = 5,
                            IdMetodoPagoFk = 2,
                            ValorTotalTransaccion = 60.0
                        },
                        new
                        {
                            Id = 6,
                            DireccionCliente = "Calle F, Ciudad",
                            FechaTransaccion = new DateTime(2023, 11, 11, 0, 13, 24, 844, DateTimeKind.Local).AddTicks(8105),
                            IdClienteFk = 1,
                            IdCompraFk = 6,
                            IdMetodoPagoFk = 1,
                            ValorTotalTransaccion = 45.0
                        },
                        new
                        {
                            Id = 7,
                            DireccionCliente = "Calle G, Ciudad",
                            FechaTransaccion = new DateTime(2023, 11, 11, 0, 13, 24, 844, DateTimeKind.Local).AddTicks(8106),
                            IdClienteFk = 2,
                            IdCompraFk = 7,
                            IdMetodoPagoFk = 2,
                            ValorTotalTransaccion = 80.0
                        },
                        new
                        {
                            Id = 8,
                            DireccionCliente = "Calle H, Ciudad",
                            FechaTransaccion = new DateTime(2023, 11, 11, 0, 13, 24, 844, DateTimeKind.Local).AddTicks(8106),
                            IdClienteFk = 3,
                            IdCompraFk = 8,
                            IdMetodoPagoFk = 3,
                            ValorTotalTransaccion = 95.0
                        },
                        new
                        {
                            Id = 9,
                            DireccionCliente = "Calle I, Ciudad",
                            FechaTransaccion = new DateTime(2023, 11, 11, 0, 13, 24, 844, DateTimeKind.Local).AddTicks(8107),
                            IdClienteFk = 4,
                            IdCompraFk = 9,
                            IdMetodoPagoFk = 1,
                            ValorTotalTransaccion = 70.0
                        },
                        new
                        {
                            Id = 10,
                            DireccionCliente = "Calle J, Ciudad",
                            FechaTransaccion = new DateTime(2023, 11, 11, 0, 13, 24, 844, DateTimeKind.Local).AddTicks(8108),
                            IdClienteFk = 5,
                            IdCompraFk = 10,
                            IdMetodoPagoFk = 2,
                            ValorTotalTransaccion = 55.0
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCompra")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("Cantidad");

                    b.Property<int>("IdProductoFk")
                        .HasColumnType("int")
                        .HasColumnName("IdProductoFk");

                    b.Property<double>("ValorUnitUSD")
                        .HasColumnType("double")
                        .HasColumnName("ValorUnitUSD");

                    b.HasKey("Id");

                    b.HasIndex("IdProductoFk");

                    b.ToTable("Compra", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 3,
                            IdProductoFk = 1,
                            ValorUnitUSD = 20.0
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 2,
                            IdProductoFk = 2,
                            ValorUnitUSD = 15.5
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 1,
                            IdProductoFk = 3,
                            ValorUnitUSD = 30.0
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 4,
                            IdProductoFk = 4,
                            ValorUnitUSD = 10.0
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 2,
                            IdProductoFk = 5,
                            ValorUnitUSD = 25.5
                        },
                        new
                        {
                            Id = 6,
                            Cantidad = 1,
                            IdProductoFk = 1,
                            ValorUnitUSD = 15.75
                        },
                        new
                        {
                            Id = 7,
                            Cantidad = 3,
                            IdProductoFk = 2,
                            ValorUnitUSD = 30.0
                        },
                        new
                        {
                            Id = 8,
                            Cantidad = 1,
                            IdProductoFk = 3,
                            ValorUnitUSD = 10.0
                        },
                        new
                        {
                            Id = 9,
                            Cantidad = 2,
                            IdProductoFk = 4,
                            ValorUnitUSD = 25.5
                        },
                        new
                        {
                            Id = 10,
                            Cantidad = 1,
                            IdProductoFk = 5,
                            ValorUnitUSD = 15.75
                        });
                });

            modelBuilder.Entity("Dominio.Entities.DetalleProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdDetalleProducto")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DetallesAdicionalesProducto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("DetallesAdicionalesProducto");

                    b.Property<int>("IdProductoFk")
                        .HasColumnType("int")
                        .HasColumnName("IdProductoFk");

                    b.HasKey("Id");

                    b.HasIndex("IdProductoFk");

                    b.ToTable("DetalleProducto", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DetallesAdicionalesProducto = "Detalles adicionales para Producto 1",
                            IdProductoFk = 1
                        },
                        new
                        {
                            Id = 2,
                            DetallesAdicionalesProducto = "Detalles adicionales para Producto 2",
                            IdProductoFk = 2
                        },
                        new
                        {
                            Id = 3,
                            DetallesAdicionalesProducto = "Detalles adicionales para Producto 3",
                            IdProductoFk = 3
                        },
                        new
                        {
                            Id = 4,
                            DetallesAdicionalesProducto = "Detalles adicionales para Producto 4",
                            IdProductoFk = 4
                        },
                        new
                        {
                            Id = 5,
                            DetallesAdicionalesProducto = "Detalles adicionales para Producto 5",
                            IdProductoFk = 5
                        },
                        new
                        {
                            Id = 6,
                            DetallesAdicionalesProducto = "Detalles adicionales para Producto 1",
                            IdProductoFk = 1
                        },
                        new
                        {
                            Id = 7,
                            DetallesAdicionalesProducto = "Detalles adicionales para Producto 2",
                            IdProductoFk = 2
                        },
                        new
                        {
                            Id = 8,
                            DetallesAdicionalesProducto = "Detalles adicionales para Producto 3",
                            IdProductoFk = 3
                        },
                        new
                        {
                            Id = 9,
                            DetallesAdicionalesProducto = "Detalles adicionales para Producto 4",
                            IdProductoFk = 4
                        },
                        new
                        {
                            Id = 10,
                            DetallesAdicionalesProducto = "Detalles adicionales para Producto 5",
                            IdProductoFk = 5
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPago")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Pago", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Tarjeta de Crédito"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Transferencia Bancaria"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "PayPal"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Efectivo"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Cheque"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Tarjeta de Débito"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Bitcoin"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Apple Pay"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Google Pay"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Venmo"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdProducto")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCategoriaFk")
                        .HasColumnType("int")
                        .HasColumnName("IdCategoriaFk");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Marca");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.Property<double>("Precio")
                        .HasColumnType("double")
                        .HasColumnName("Precio");

                    b.Property<int>("StockDisponible")
                        .HasColumnType("int")
                        .HasColumnName("StockDisponible");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("UrlImagen");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoriaFk");

                    b.ToTable("Producto", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdCategoriaFk = 1,
                            Marca = "Adidas",
                            Nombre = "Laptop Adidas",
                            Precio = 800.0,
                            StockDisponible = 50,
                            UrlImagen = "https://i.imgur.com/nV5x34p.jpg"
                        },
                        new
                        {
                            Id = 2,
                            IdCategoriaFk = 1,
                            Marca = "Adidas",
                            Nombre = "Smartphone Adidas",
                            Precio = 500.0,
                            StockDisponible = 100,
                            UrlImagen = "https://i.imgur.com/w99d8o5.jpg"
                        },
                        new
                        {
                            Id = 3,
                            IdCategoriaFk = 2,
                            Marca = "Adidas",
                            Nombre = "Television Adidas",
                            Precio = 1200.0,
                            StockDisponible = 30,
                            UrlImagen = "https://i.imgur.com/5rE070t.jpg"
                        },
                        new
                        {
                            Id = 4,
                            IdCategoriaFk = 3,
                            Marca = "Adidas",
                            Nombre = "Zapatillas Deportivas Adidas",
                            Precio = 80.0,
                            StockDisponible = 200,
                            UrlImagen = "https://i.imgur.com/oQ8i8q.jpg"
                        },
                        new
                        {
                            Id = 5,
                            IdCategoriaFk = 7,
                            Marca = "Adidas",
                            Nombre = "Libro de Ciencia Ficción Adidas",
                            Precio = 15.0,
                            StockDisponible = 50,
                            UrlImagen = "https://i.imgur.com/3c3Q8sJ.jpg"
                        },
                        new
                        {
                            Id = 6,
                            IdCategoriaFk = 6,
                            Marca = "Adidas",
                            Nombre = "Mesa de Comedor Adidas",
                            Precio = 250.0,
                            StockDisponible = 60,
                            UrlImagen = "https://i.imgur.com/787878s.jpg"
                        },
                        new
                        {
                            Id = 7,
                            IdCategoriaFk = 5,
                            Marca = "Adidas",
                            Nombre = "Reloj Inteligente Adidas",
                            Precio = 100.0,
                            StockDisponible = 75,
                            UrlImagen = "https://i.imgur.com/f94g11j.jpg"
                        },
                        new
                        {
                            Id = 8,
                            IdCategoriaFk = 4,
                            Marca = "Adidas",
                            Nombre = "Cámara DSLR Adidas",
                            Precio = 600.0,
                            StockDisponible = 15,
                            UrlImagen = "https://i.imgur.com/339559s.jpg"
                        },
                        new
                        {
                            Id = 9,
                            IdCategoriaFk = 10,
                            Marca = "Adidas",
                            Nombre = "Silla de Oficina Adidas",
                            Precio = 120.0,
                            StockDisponible = 40,
                            UrlImagen = "https://i.imgur.com/696969s.jpg"
                        },
                        new
                        {
                            Id = 10,
                            IdCategoriaFk = 6,
                            Marca = "Adidas",
                            Nombre = "Botellas de Vino (Pack de 6) Adidas",
                            Precio = 50.0,
                            StockDisponible = 60,
                            UrlImagen = "https://i.imgur.com/787878s.jpg"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRol")
                        .HasAnnotation("MySqlValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("NombreRol");

                    b.HasKey("Id");

                    b.ToTable("Rol", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Gerente"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Empleado"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Persona"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Usuario")
                        .HasAnnotation("MySqlValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("Password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "britodelgado514@gmail.com",
                            Password = "123456",
                            Username = "Sicer Brito"
                        },
                        new
                        {
                            Id = 2,
                            Email = "angedeveloper@gmail.com",
                            Password = "123456",
                            Username = "Angelica Morales"
                        },
                        new
                        {
                            Id = 3,
                            Email = "lisethtorres969@gmail.com",
                            Password = "123456",
                            Username = "Konny Alucemna"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.UsuarioRoles", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("UsuariosRoles");
                });

            modelBuilder.Entity("Dominio.Entities.CarritoCompra", b =>
                {
                    b.HasOne("Dominio.Entities.Cliente", "Clientes")
                        .WithMany("CarritoCompras")
                        .HasForeignKey("IdClienteFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Producto", "Productos")
                        .WithMany("CarritoCompras")
                        .HasForeignKey("IdProductoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Dominio.Entities.ClienteCompra", b =>
                {
                    b.HasOne("Dominio.Entities.Cliente", "Clientes")
                        .WithMany("ClienteCompras")
                        .HasForeignKey("IdClienteFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Compra", "Compras")
                        .WithMany("ClienteCompras")
                        .HasForeignKey("IdCompraFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Pago", "Pagos")
                        .WithMany("ClienteCompras")
                        .HasForeignKey("IdMetodoPagoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("Compras");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Dominio.Entities.Compra", b =>
                {
                    b.HasOne("Dominio.Entities.Producto", "Productos")
                        .WithMany("Compras")
                        .HasForeignKey("IdProductoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Dominio.Entities.DetalleProducto", b =>
                {
                    b.HasOne("Dominio.Entities.Producto", "Productos")
                        .WithMany("DetalleProductos")
                        .HasForeignKey("IdProductoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Dominio.Entities.Producto", b =>
                {
                    b.HasOne("Dominio.Entities.CategoriaProducto", "CategoriaProductos")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoriaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaProductos");
                });

            modelBuilder.Entity("Dominio.Entities.RefreshToken", b =>
                {
                    b.HasOne("Dominio.Entities.Usuario", "Usuario")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.Entities.UsuarioRoles", b =>
                {
                    b.HasOne("Dominio.Entities.Rol", "Roles")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Usuario", "Usuarios")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Dominio.Entities.CategoriaProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Dominio.Entities.Cliente", b =>
                {
                    b.Navigation("CarritoCompras");

                    b.Navigation("ClienteCompras");
                });

            modelBuilder.Entity("Dominio.Entities.Compra", b =>
                {
                    b.Navigation("ClienteCompras");
                });

            modelBuilder.Entity("Dominio.Entities.Pago", b =>
                {
                    b.Navigation("ClienteCompras");
                });

            modelBuilder.Entity("Dominio.Entities.Producto", b =>
                {
                    b.Navigation("CarritoCompras");

                    b.Navigation("Compras");

                    b.Navigation("DetalleProductos");
                });

            modelBuilder.Entity("Dominio.Entities.Rol", b =>
                {
                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("Dominio.Entities.Usuario", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
